program test1;
{$I slackasm/assembler.pas}
{$X+}

var
  assembler: TSlackASM;
  Method: external procedure();
var
  byt: Int32 = 4;
  x: Int32;
begin
  with assembler := TSlackASM.Create(2 shl 11) do
  try
    emit(_add(_AH, _CX));
    emit(_add(_AH, ECX));
    emit(_add(_AX, ECX));
    emit(_add(EAX, ECX));

    //emit(_inc(ECX));
    //emit(_mov(ECX, @x));
    emit(_ret);
    Method := Finalize();
  finally
    WriteLn(Code);
    Free(False);
  end;

  //Method();
  WriteLn([x]);
  FreeMethod(@method);
end.
